// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in = sel[0], out = notSel0);
	Not(in = sel[1], out = notSel1);
	Not(in = sel[2], out = notSel2);

	// 00
	And(a = notSel1, b = notSel0, out = notSel1AndNotSel0);
	// 01
	And(a = notSel1, b = sel[0], out = notSel1AndSel0);
	// 10
	And(a = sel[1], b = notSel0, out = sel1AndNotSel0);
	// 11
	And(a = sel[1], b = sel[0], out = sel1AndSel0);

	// 000
	And(a = notSel2, b = notSel1AndNotSel0, out = notSel2AndNotSel1AndNotSel0);
	// 001
	And(a = notSel2, b = notSel1AndSel0, out = notSel2AndNotSel1AndSel0);
	// 010
	And(a = notSel2, b = sel1AndNotSel0, out = notSel2AndSel1AndNotSel0);
	// 011
	And(a = notSel2, b = sel1AndSel0, out = notSel2AndSel1AndSel0);
	// 100
	And(a = sel[2], b = notSel1AndNotSel0, out = sel2AndNotSel1AndNotSel0);
	// 101
	And(a = sel[2], b = notSel1AndSel0, out = sel2AndNotSel1AndSel0);
	// 110
	And(a = sel[2], b = sel1AndNotSel0, out = sel2AndSel1AndNotSel0);
	// 111
	And(a = sel[2], b = sel1AndSel0, out = sel2AndSel1AndSel0);


	And(a = notSel2AndNotSel1AndNotSel0, b = in, out = a);
	And(a = notSel2AndNotSel1AndSel0, b = in, out = b);
	And(a = notSel2AndSel1AndNotSel0, b = in, out = c);
	And(a = notSel2AndSel1AndSel0, b = in, out = d);
	And(a = sel2AndNotSel1AndNotSel0, b = in, out = e);
	And(a = sel2AndNotSel1AndSel0, b = in, out = f);
	And(a = sel2AndSel1AndNotSel0, b = in, out = g);
	And(a = sel2AndSel1AndSel0, b = in, out = h);
	
}